using SecretSantaBot.Components;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace SecretSantaBot.Handlers;

public class UserCommandsHandler {
    private static Update _update;
    private static ITelegramBotClient _bot;

    public UserCommandsHandler(Update update, ITelegramBotClient bot) {
        _update = update;
        _bot = bot;
    }
    
    public async Task StartRecivingUserCommands() {
        await BasicCommands();
        await MenuCommands();
        await TeamCommand();
    }

    private async Task BasicCommands() {
        var inline = new ReplyKeyboardMarkup(new[] {
            new[] {
                new KeyboardButton("üë• –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É"),
            },
            new[] {
                new KeyboardButton("üî¢ –ú—ñ–π Chat ID")
            }
        }){ ResizeKeyboard = true };
        if (_update.Message.Text == "/start") {
            var greetingMessage = "üéÖ –ü—Ä–∏–≤—ñ—Ç —ñ –ª–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –±–æ—Ç–∞ –¢–∞—î–º–Ω–∏–π –°–∞–Ω—Ç–∞! üéÑ\n\n"
                                     + "üéÅ –¢—É—Ç –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ–π –æ–±–º—ñ–Ω –ø–æ–¥–∞—Ä—É–Ω–∫–∞–º–∏ –∑—ñ —Å–≤–æ—ó–º–∏ –¥—Ä—É–∑—è–º–∏ –∞–±–æ –∫–æ–ª–µ–≥–∞–º–∏.\n"
                                     + "‚ú® –©–æ–± –ø–æ—á–∞—Ç–∏, –¥–æ–¥–∞–π—Ç–µ —Å–≤–æ—ó—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤ —ñ –∑–∞–ø—É—Å—Ç—ñ—Ç—å –∂–µ—Ä–µ–±–∫—É–≤–∞–Ω–Ω—è (–∫–æ–∂–µ–Ω –∑ —É—á–∞—Å—Ç–Ω–∏–∫—ñ–≤ –ø–æ–≤–∏–Ω–µ–Ω –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ /start –≤ –±–æ—Ç—ñ).\n\n"
                                     + "üéâ –ù–µ—Ö–∞–π —Ü—è –≥—Ä–∞ —Å—Ç–∞–Ω–µ –ø–æ—á–∞—Ç–∫–æ–º —Å–≤—è—Ç–∫–æ–≤–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—é –¥–ª—è –≤—Å—ñ—Ö!";
            await _bot.SendTextMessageAsync(_update.Message.Chat.Id, greetingMessage, replyMarkup:inline);
        }
    }

    private async Task MenuCommands() {
        if (_update.Message.Text.Contains("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É")) {
            string message =
                "üë• –©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–ø–∏—à—ñ—Ç—å Chat ID –∫–æ–∂–Ω–æ–≥–æ –∑ —É—á–∞—Å–Ω–∏–∫—ñ–≤ (–π–æ–≥–æ –º–æ–∂–Ω–∞ –≤–∑—è—Ç–∏ –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞).\n"
                + "–ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥–µ–π - 2\n"
                + "–ù—É–º–µ—Ä–∞—Ü—ñ—è —î –æ–±–æ–≤'—è–∑–∫–æ–≤–æ—é!\n\n"
                + "–ü—Ä–∏–∫–ª–∞–¥:\n"
                +"/createTeam\n"
                +"1. 71..22\n2. 16..62\n3. 24..60\n";
            await _bot.SendTextMessageAsync(_update.Message.Chat.Id, message);
        }
        
        if (_update.Message.Text.Contains("–ú—ñ–π Chat ID")) {
            await _bot.SendTextMessageAsync(_update.Message.Chat.Id,
                $"–í–∞—à Chat ID: <code>{_update.Message.Chat.Id}</code>", 
                parseMode: ParseMode.Html);
        }
    }

    private async Task TeamCommand() {
        if (_update.Message.Text.StartsWith("/createTeam")) {
            var list = _update.Message.Text.GetChatIds();
        
            if (list.Count < 2) {
                await _bot.SendTextMessageAsync(_update.Message.Chat.Id, 
                    "‚ùå –ü–æ–º–∏–ª–∫–∞! –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ö–æ—á–∞ –± –¥–≤–∞ —É—á–∞—Å–Ω–∏–∫–∞.");
                return;
            }

            list.Shuffle();
            
            for (int i = 0; i < list.Count; i++)
            {
                var giverId = list[i];
                var receiverId = list[(i + 1) % list.Count];
                
                var giverUsername = await SecretSanta.GetUsernameByChatId(long.Parse(giverId), _bot);
                var receiverUsername = await SecretSanta.GetUsernameByChatId(long.Parse(receiverId), _bot);
                
                var message = $"üéÅ –í—ñ—Ç–∞—î–º–æ, –≤–∞–º –¥–æ—Ä—É—á–∏–ª–∏ –∑—Ä–æ–±–∏—Ç–∏ —â–∞—Å–ª–∏–≤–æ—é –ª—é–¥–∏–Ω—É!\n\n –í–∏ –±—É–¥–µ—Ç–µ –¥–∞—Ä—É–≤–∞—Ç–∏ –ø–æ–¥–∞—Ä—É–Ω–æ–∫: {receiverUsername}. üéÑ";
                
                await _bot.SendTextMessageAsync(giverId, message);
            }
        }
    }
}